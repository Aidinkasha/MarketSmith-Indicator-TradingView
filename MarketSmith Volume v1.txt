// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Fred6724

//@version=5
indicator("MarketSmith Volumes", format = format.volume)

// Inputs
prevC   = input(true, title='Color Based On Previous Close',  group="VOLUMES")
percChg = input(true, title='% Change',  group="VOLUMES")
peakL   = input(9, "Peak Length", group="VOLUMES")
colUp   = input(color.rgb(39,54,233,0), title="Up Volume Color", group = "VOLUMES")
colDn   = input(color.rgb(222,50,174,0), title="Up Volume Color", group = "VOLUMES")
trunc   = input(false, title="Truncate for MarketSmith type display", group = "DISPLAY")
labels  = input(true, title="Labels on Volume", group = "DISPLAY")
labelC  = input(color.rgb(0,0,0,0), title="Text Label Color", group = "DISPLAY")
labelS  = input.string('Normal', 'Text Size', options = ['Tiny', 'Small', 'Normal', 'Large'], group = "DISPLAY")
lenDa   = input(50, "Length Daily", group = "MA")
lenWe   = input(10, "Length Weekly", group = "MA")
colMa   = input(color.red, title="MA Color", group = "MA")
tf      = timeframe.period
ticker  = syminfo.tickerid

// Switch Label Size
sLabel = switch labelS
    'Normal'  => size.normal
    'Tiny'    => size.tiny
    'Small'   => size.small
    'Large'   => size.large

// Volume and MA calculation
s       = ticker == "NSE:NIFTY" ? "NSE:NIFTY1!" : ticker == "NSE:BANKNIFTY" ? "NSE:BANKNIFTY1!" : ticker == "NSE:CNXFINANCE" ? "NSE:FINNIFTY1!" : ticker
vol     = request.security(s, tf, volume)
// Color of Volumes
colr = close>open ? colUp:colDn
if(prevC)
    colr := close>close[1] ? colUp:colDn
ma      = timeframe.isweekly ? ta.sma(vol, lenWe) : ta.sma(vol, lenDa)

// Display in the style of MarketSmith
// Recalculation of the volume with limitation
vol2 = vol > 2*ma ? 2*ma:vol
// Display
plot(trunc ? vol2:vol, title = "Volume" , color = colr, style = plot.style_histogram, linewidth = 3)
plot(ma, title = "MA", color = colMa)



// Labels: Marked Highs Volume Bars Peak     &     %Variation Labels
// For Good Beat after the Peak Volume Bars Period
pivotHigh  = ta.pivothigh(volume, peakL, peakL)
varPercent = 100*(vol[peakL]/ma[peakL])-100
if(labels)
    if (pivotHigh and varPercent>25)
        string textvol9 = "N/A"
        if(percChg)
            textvol9 := str.tostring(vol[peakL]/1000000, '0.00')+'M'+' (+'+str.tostring(varPercent, '0')+'%)'
        if(not percChg)
            textvol9 := str.tostring(vol[peakL]/1000000, '0.00')+'M'
        volestvol = label.new(bar_index-peakL, trunc ? vol2[peakL]:vol[peakL], xloc=xloc.bar_index, yloc=yloc.price, style=label.style_none, size= sLabel, text=textvol9, textcolor=labelC)
    // If we have a good % beat in a period lower than the Peak Volume Bars Period
    for i=peakL-1 to 0
        pivotHigh2 = ta.pivothigh(volume, peakL, i)
        varPercent2 = 100*(vol[i]/ma[i])-100
        if(barstate.islast and pivotHigh2 and varPercent2>25)//varPercent2[i]>=150) // bar islast
            string textvol9 = "N/A"
            if(percChg)
                textvol9 := str.tostring(vol[i]/1000000, '0.00')+'M'+' (+'+str.tostring(varPercent2, '0')+'%)'
            if(varPercent2 >= 0 and not percChg)
                textvol9 := str.tostring(vol[i]/1000000, '0.00')+'M'
            volestvol2 = label.new(bar_index-i, trunc ? vol2[i]:vol[i], xloc=xloc.bar_index, yloc=yloc.price, style=label.style_none, size = sLabel, text=textvol9, textcolor=labelC)
